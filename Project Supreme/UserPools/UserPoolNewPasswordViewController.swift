//
//  UserPoolNewPasswordViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.10
//
//

import Foundation
import AWSCognitoIdentityProvider
import AWSMobileHubHelper

class UserPoolNewPasswordViewController: UIViewController {
    
    var user: AWSCognitoIdentityUser? // variable that holds the user that we are changing the password of. was passed to this view controller from the previous view controller (ForgotPasswordPhoneNumberViewController)
    
    @IBOutlet weak var confirmationCode: UITextField! // textField where the user enters the confirmation code that was sent to the phone number associated with the account
    @IBOutlet weak var updatedPassword: UITextField! // textField where the user will enter the new password
    @IBOutlet weak var retypeUpdatedPassword: UITextField! // textField where the user will re-enter the new password
    
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    @IBAction func onUpdatePassword(_ sender: AnyObject) {

        guard let confirmationCodeValue = self.confirmationCode.text, !confirmationCodeValue.isEmpty else {
            self.supremeShowError(title: "Code Field Empty", message: "Please enter the confirmation code", action: nil)
            return
        }
        
        if updatedPassword.text! != retypeUpdatedPassword.text! { // if the password's the user entered do not match
            self.supremeShowError(title: "Oops", message: "Your password's do not match!", action: nil)
            return
        }
        
        if updatedPassword.text!.characters.count < 6 { // if the password that the user entered is shorter than 6 characters
            self.supremeShowError(title: "Oops", message: "Password must be 6 characters or longer!", action: nil)
            return
        }
        
        // update new password
        _ = self.user?.confirmForgotPassword(confirmationCodeValue, password: self.updatedPassword.text!).continueWith(block: {[weak self] (task: AWSTask) -> AnyObject? in
            guard let strongSelf = self else { return nil }
            if let error = task.error as? NSError {
                strongSelf.supremeShowError(title: String(describing: error.userInfo["__type"]!), message: String(describing: error.userInfo["message"]!), action: nil)
            } else {
                strongSelf.supremeShowError(title: "Password Reset Complete", message: "Password Reset was completed successfully", action: nil)
                _ = strongSelf.navigationController?.popToRootViewController(animated: true)
            }
            return nil
        })
    }
    
    @IBAction func onCancel(_ sender: AnyObject) {
        _ = self.navigationController?.popToRootViewController(animated: true)
    }
    
}

//
//  UserPoolNewPasswordViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.10
//
//

import Foundation
import AWSCognitoIdentityProvider
import AWSMobileHubHelper

class UserPoolNewPasswordViewController: UIViewController {
    
    var user: AWSCognitoIdentityUser?
    
    @IBOutlet weak var confirmationCode: UITextField!
    @IBOutlet weak var updatedPassword: UITextField!
    @IBOutlet weak var retypeUpdatedPassword: UITextField!
    
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    @IBAction func onUpdatePassword(_ sender: AnyObject) {
        let ac = UIAlertController(title: nil, message: nil, preferredStyle: .alert)
        ac.addAction(UIAlertAction(title: "Ok", style: .cancel))
        
        guard let confirmationCodeValue = self.confirmationCode.text, !confirmationCodeValue.isEmpty else {
            ac.title = "Code Field Empty"
            ac.message = "Please enter the confirmation code."
            self.present(ac, animated: true)
            return
        }
        
        if updatedPassword.text! != retypeUpdatedPassword.text! {
            ac.title = "Oops"
            ac.message = "Your password's do not match!"
            self.present(ac, animated: true)
            return
        }
        
        if updatedPassword.text!.characters.count < 6 {
            ac.title = "Oops"
            ac.message = "Password must be 6 characters or longer!"
            self.present(ac, animated: true)
            return
        }
        
        //confirm forgot password with input from ui.
        _ = self.user?.confirmForgotPassword(confirmationCodeValue, password: self.updatedPassword.text!).continueWith(block: {[weak self] (task: AWSTask) -> AnyObject? in
            guard let strongSelf = self else { return nil }
            DispatchQueue.main.async(execute: { 
                if let error = task.error as? NSError {
                    ac.title = error.userInfo["__type"] as? String
                    ac.message = error.userInfo["message"] as? String
                    strongSelf.present(ac, animated: true)
                } else {
                    ac.title = "Password Reset Complete"
                    ac.message = "Password Reset was completed successfully"
                    strongSelf.present(ac, animated: true)
                    _ = strongSelf.navigationController?.popToRootViewController(animated: true)
                }
            })
            return nil
        })
    }
    
    @IBAction func onCancel(_ sender: AnyObject) {
        _ = self.navigationController?.popToRootViewController(animated: true)
    }
    
}
